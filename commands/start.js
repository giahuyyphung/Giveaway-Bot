const ms = require('ms');

exports.run = async (client, message, args) => {

    // N·∫øu th√†nh vi√™n kh√¥ng c√≥ ƒë·ªß quy·ªÅn h·∫°n
    if(!message.member.hasPermission('MANAGE_MESSAGES') && !message.member.roles.cache.some((r) => r.name === "Giveaways")){
        return message.channel.send('<a:hg_cross:1213677888528982026> You need to have the manage messages permissions to start giveaways.');
    }

    // K√™nh giveaway
    let giveawayChannel = message.mentions.channels.first();
    // N·∫øu kh√¥ng c√≥ k√™nh n√†o ƒë∆∞·ª£c ƒë·ªÅ c·∫≠p
    if(!giveawayChannel){
        return message.channel.send('<a:hg_cross:1213677888528982026> You have to mention a valid channel!');
    }

    // Th·ªùi gian giveaway
    let giveawayDuration = args[1];
    // N·∫øu th·ªùi gian kh√¥ng h·ª£p l·ªá
    if(!giveawayDuration || isNaN(ms(giveawayDuration))){
        return message.channel.send('<a:hg_cross:1213677888528982026> You have to specify a valid duration!');
    }

    // S·ªë ng∆∞·ªùi chi·∫øn th·∫Øng
    let giveawayNumberWinners = args[2];
    // N·∫øu s·ªë l∆∞·ª£ng ng∆∞·ªùi chi·∫øn th·∫Øng kh√¥ng ph·∫£i l√† s·ªë
    if(isNaN(giveawayNumberWinners) || (parseInt(giveawayNumberWinners) <= 0)){
        return message.channel.send('<a:hg_cross:1213677888528982026> You have to specify a valid number of winners!');
    }

    // Ph·∫ßn th∆∞·ªüng giveaway
    let giveawayPrize = args.slice(3).join(' ');
    // N·∫øu kh√¥ng c√≥ ph·∫ßn th∆∞·ªüng n√†o ƒë∆∞·ª£c x√°c ƒë·ªãnh
    if(!giveawayPrize){
        return message.channel.send('<a:hg_cross:1213677888528982026> You have to specify a valid prize!');
    }

    // X√≥a tin nh·∫Øn ?start c·ªßa host
    await message.delete();

    // B·∫Øt ƒë·∫ßu giveaway
    client.giveawaysManager.start(giveawayChannel, {
        // Th·ªùi gian giveaway
        time: ms(giveawayDuration),
        // Ph·∫ßn th∆∞·ªüng giveaway
        prize: giveawayPrize,
        // S·ªë l∆∞·ª£ng ng∆∞·ªùi chi·∫øn th·∫Øng giveaway
        winnerCount: parseInt(giveawayNumberWinners),
        // Ng∆∞·ªùi host giveaway
        hostedBy: client.config.hostedBy ? message.author : null,
        // Tin nh·∫Øn
        messages: {
            giveaway: (client.config.everyoneMention ? "<@&1080877156588060712>\n\n" : "")+"<a:hc_sparkle:1239157985809403936> **Giveaways ƒê√£ B·∫Øt ƒê·∫ßu** <a:hc_sparkle:1239157985809403936>\nHosted by: <@" + message.author.id + ">",
            giveawayEnded: (client.config.everyoneMention ? "@everyone\n\n" : "")+"<a:hc_sparkle:1239157985809403936> **Giveaways ƒê√£ K·∫øt Th√∫c** <a:hc_sparkle:1239157985809403936>\nHosted by: <@" + message.author.id + ">",
            timeRemaining: "<a:hc_quay:1210414481503559701> Countdown: **{duration}**!",
            inviteToParticipate: "<a:hc_muiten:1239143693479579658> React with üéâ to participate!",
            winMessage: "<a:hg_party:1082275579979649054> | Congratulations, {winners} won the **{prize}** Giveaways!",
            embedFooter: "Giveaways",
            noWinner: "Giveaway cancelled, no valid participations.",
            hostedBy: "Hosted by: {user}",
            winners: "winner(s)",
            endedAt: "Ended at",
            units: {
                seconds: "seconds",
                minutes: "minutes",
                hours: "hours",
                days: "days",
                pluralS: false // Kh√¥ng c·∫ßn thi·∫øt, v√¨ c√°c ƒë∆°n v·ªã k·∫øt th√∫c b·∫±ng S n√™n s·∫Ω t·ª± ƒë·ªông lo·∫°i b·ªè n·∫øu gi√° tr·ªã ƒë∆°n v·ªã nh·ªè h∆°n 2
            }
        },
        // Th√™m ·∫£nh avatar c·ªßa ng∆∞·ªùi host v√†o tin nh·∫Øn
        thumbnail: message.author.displayAvatarURL({ format: 'png', dynamic: true })
    });

    message.channel.send(`Giveaway started in ${giveawayChannel}!`);

};
